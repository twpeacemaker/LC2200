Test cases for file systems
Thomas Peacemaker

Commands:
  - The following will how each command will have to be tested to assure that
    it is working correctly.

  - These are what needs to be tested per command, some test cases have a
    file that correspond to a file that represents the hex to the hard drive
    these test cases will say that the test case number show what file it goes
    with

  format (1)
    - (01) run the format command and exit the lc2200 if the file system has the
           super node and / directory and all other nodes are free the command
           worked correctly
           set inode size to 5
           > formate
            - file should appear as 01.txt

  displayInode [< n > < m >] (1)
    In order to test:
      - the disk must format correctly

    - (02) display all inode from 0 to n, assure that it corresponds to the
           current drive
           > displayInode
            should display all inodes in hard drive when exited
    - (27) display notes from n to end
          > displayInode 4
            should display nodes 4 to end in the
            should display 4 to end inodes in hard drive when exited
    - (30) display notes from n to end
          > displayInode 2 4
            should display nodes 2 to 4 in the hard drive file
            should display 4 to end inodes in hard drive when exited
  mkdir < path to directory > (1)
    In order to test:
      - the disk must format correctly
      - display i-nodes must be correct

      - (03) make a directory in root say M
        mkdir M
        exit and check file 03.txt they should correspond

      - (28) with 5 inode configured. make 3 directorie. test it throughs proper
             error that the file system is filled.
            > mkdir M
            > mkdir Ma
            > mkdir Mb
            check 28.txt and assure the hard drive matches the file

      - (31) with 5 inode configured. make 4 directories should throw error
            > mkdir M
            > mkdir Ma
            > mkdir Mb
            > exit
            > ERROR: NO FREE NODES

      - (09) make the same directory of the same name in the same directory.
            should through an error
            > mkdir M
            > mkdir M
            ERROR: A FILE OF THAT NAME IS AREADY CREATED

  rmdir < path to directory > (1)
    In order to test:
      - the disk must format correctly
      - display i-nodes must be correct
      - mkdir must be correct

      - (04) rmdir a empty directory
        > mkdir M
        > mkdir Ma
        > mkdir Mb
        > rmdir M
        exit and check file 04.txt they should correspond

      - (05) rmdir a directory with content, should throw an error
             * after cd is tested
        > mkdir M
        > cd M
        > mkdir l
        > cd
        > rm M
        ERROR: DIRECTORY HAS CONTENT
      - (24) rmdir a file, error
            * after cp tested
          > cp test/prog1 /
          > rm prog1
          ERROR: ITEM IS NOT A DIRECTORY

  pwd (1)
    In order to test:
      - mkdir must be correct
      - cd must be correct

    - (06) start the lc2200 and assure the present working directory is /
      > pwd
        /
    - (07) test again in cd when you can cd into a directory and run the cd
         command. test is to assure the proper path can be built
      > mkdir M
      > cd M
      > pwd
      /M

  cd [< path to directory >] (1)
    In order to test:
      - mkdir must be correct

      - (08) run pwd and cd to a directory then run pwd again
        pwd
        /
        mkdir M
        /M
      - (10) cd ../{Directory} relative
        > pwd
        /
        > mkdir M
        > mkdir A
        cd M
        cd ../A
        pwd
        /A
      - (11) cd /{Directory} absolute
        > pwd
        /
        > mkdir M
        > mkdir A
        cd M
        cd /A
        pwd
        /A

  ls [< path to directory >] (1)
    In order to test:
      - mkdir must be correct

    - (13) a freshly formatted drive should have no children in /
      ls

      - should be empty
    - (14) make a directory in root say M,  also test mkdir
      mkdir M
      ls
      M
    - (15) make a directory in root say A,  also test mkdir
      mkdir M
      mkdir A
      ls
      A M
    - (16) make a directory in root say MA, also test mkdir
      mkdir M
      mkdir A
      mkdir MA
      ls
      A M MA
  exit (1)
    - (17) exit the terminal
    > exit
    should leave the terminal
  cp ['+' | '-'] < path to a file > < path to a file or directory > (2)
    - (18) add a file to the file system
      > cp + test/prog1 /
      > ls
      prog2
      should reflect the contents of file 18.txt
    - (19) remove that file from the file system
      - the file should not change
      cp - prog1 test/prog1
      should reflect the contents of file 19.txt
      and the file on the linux drive should have not of changed

    - (30) add a file to the file system that does not exist
      > cp + test/test
      ERROR: THE FILE DOES NOT EXIST

    - (31) remove that file from the file system
      - the file should not change
      > cp - test /
      ERROR: THE FILE DOES NOT EXIST

  cat ['h'] < path to a file > (2)
    - (20) cat a file
      > cp + test/prog1 /
      cat prog1
      6
      93000000
      A3000000
      04300003
      17300003
      24700001
      70000000
    - (21) cat a directory
      > mkdir M
      > cat M
      ERROR: PARAMETER IS NOT FILE TYPE

  rm < path to file > (2)
    - (22) remove a file
      > cp + test/prog1 /
      > rm prog1
      should reflect the contents of file 22.txt

    - (23) remove a directory
      > mkdir M
      > rm M
      ERROR: PARAMETER IS NOT FILE TYPE

  du [< path to directory >] (2)
    - (25) du a directory
      the number of bytes used by the inode for the directory,
      the number of bytes used by the inodes for any files in the directory,
      the number of bytes used by the inodes for the contents of these files,
      and the sizes of all the sub-directories.

      > cp + test/prog1 /
      > du /
      Number of Bytes for the directory: 15
      Number of Bytes for the files in directory: 16
      Number of Bytes for the directory: 8
      Size of all subdirectories: 0


  defrag (2)
    - (26) make a bunch of directories and remove them in a way to frag the
           the file system then defrag
       > mkdir M
       > mkdir Ma
       > mkdir Mb
       > rm M
       > rm Mb
       check 31.txt and assure the hard drive matches the file
      (NOTE) this should fragment the file system
      > defrag
      > exit
      (NOTE) compare the hard drive file to the file labeled (26.txt) they
      reflect the same data
